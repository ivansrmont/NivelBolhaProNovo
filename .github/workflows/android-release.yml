name: Android Release APK (Signed)
on:
  push:
    tags:
      - 'v*'
permissions:
  contents: write
jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '17'
          cache: gradle

      - name: Decode keystore
        if: ${{ secrets.SIGNING_KEYSTORE_BASE64 != '' }}
        run: echo "$SIGNING_KEYSTORE_BASE64" | base64 -d > release.keystore
        env:
          SIGNING_KEYSTORE_BASE64: ${{ secrets.SIGNING_KEYSTORE_BASE64 }}

      - name: Write signing props
        if: ${{ secrets.SIGNING_KEY_ALIAS != '' && secrets.SIGNING_KEY_PASSWORD != '' && secrets.SIGNING_STORE_PASSWORD != '' }}
        run: |
          echo "MY_KEY_ALIAS=${{ secrets.SIGNING_KEY_ALIAS }}" >> ~/.gradle/gradle.properties
          echo "MY_KEY_PASSWORD=${{ secrets.SIGNING_KEY_PASSWORD }}" >> ~/.gradle/gradle.properties
          echo "MY_STORE_PASSWORD=${{ secrets.SIGNING_STORE_PASSWORD }}" >> ~/.gradle/gradle.properties

      - name: Inject signing config
        run: |
          sed -i 's/buildTypes {/signingConfigs { release { storeFile file("release.keystore"); storePassword System.getenv("MY_STORE_PASSWORD") ?: project.findProperty("MY_STORE_PASSWORD"); keyAlias System.getenv("MY_KEY_ALIAS") ?: project.findProperty("MY_KEY_ALIAS"); keyPassword System.getenv("MY_KEY_PASSWORD") ?: project.findProperty("MY_KEY_PASSWORD"); } }

buildTypes { release { signingConfig signingConfigs.release /' app/build.gradle.kts

      - run: chmod +x gradlew
      - run: ./gradlew --no-daemon assembleRelease

      - name: Rename APK with tag
        run: |
          TAG="${GITHUB_REF_NAME}"
          SRC="app/build/outputs/apk/release/app-release.apk"
          DEST="NivelBolhaPro-${TAG}.apk"
          cp "$SRC" "$DEST"
          echo "APK_NAME=$DEST" >> $GITHUB_ENV

      - name: Upload signed APK (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APK_NAME }}
          path: ${{ env.APK_NAME }}

      - name: Create GitHub Release and upload APK
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ env.APK_NAME }}
          generate_release_notes: true
